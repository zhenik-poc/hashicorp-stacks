version: '2.1'

services:
  zoo1:
    image: confluentinc/cp-zookeeper:5.3.1
    hostname: zoo1
#    network_mode: host
#    ports:
#      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: server.1=zoo1:2888:3888
  kafka1:
    image: confluentinc/cp-kafka:5.3.1
    hostname: kafka1
#    network_mode: host
#    ports:
#      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo1

  sr:
    image: confluentinc/cp-schema-registry:5.3.1
#    network_mode: host
#    command: "bash -c 'env && echo $HOSTNAME'"
#    command: "bash -c 'env && echo $SCHEMA_REGISTRY_HOST_NAME'"
#    command: bash -c "
#      printf echo \$HOSTNAME >> bro.sh
#      && cat bro.sh
#      "
#    volumes:
#    - "./crutch.sh:/tmp/crutch.sh"
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: "0.0.0.0"
      SCHEMA_REGISTRY_LISTENERS: "http://127.0.0.1:8081"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka1:9092"
    depends_on:
      - zoo1
      - kafka1
