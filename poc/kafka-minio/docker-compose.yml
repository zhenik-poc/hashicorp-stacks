version: '3.7'

services:
  minio-server:
    image: minio/minio:RELEASE.2020-01-03T19-12-21Z
    container_name: minio
    ports:
      - "9000:9000"
    env_file:
      - minio.env
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      - zookeeper
      - kafka

#  source: https://gist.github.com/harshavardhana/cb6c0d4d220a9334a66d6259c7d54c95
  mc:
    image: minio/mc:RELEASE.2020-01-13T22-49-03Z
    env_file:
      - minio.env
      - kafka.env
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      mc config host add dc-minio http://$${X_MINIO_DOCKER_SERVICE}:$${X_MINIO_PORT} $${MINIO_ACCESS_KEY} $${MINIO_SECRET_KEY};
      mc admin config get dc-minio notify_kafka;
      mc admin config set dc-minio notify_kafka:1 tls_skip_verify="off" queue_dir="" queue_limit="0" sasl="off" sasl_password="" sasl_username="" tls_client_auth="0" tls="off" client_tls_cert="" client_tls_key="" brokers="$${X_KAFKA_LISTENER_1}" topic="minio-events-v1";
      mc admin service restart dc-minio;
      mc mb dc-minio/images;
      mc event add  dc-minio/images arn:minio:sqs::1:kafka --suffix .jpg;
      mc event list dc-minio/images;"
    depends_on:
      - minio-server
      - kafka-setup

  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.1
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:5.3.1
    ports:
      - 9092:9092
      - 29092:29092
    env_file:
      - kafka.env
    depends_on:
      - zookeeper

  # source https://github.com/jitucloud/esdc-2019/blob/41b87cdd108e6cfbd3720f1a68f195a0b091cbf5/docker/latest/5.docker-compose-kafkacat.yml
  event-consumer:
    image: confluentinc/cp-kafkacat:5.3.1
    tty: true
    stdin_open: true
    environment:
      SLEEP_TIME: 40
    entrypoint: "kafkacat -b kafka:9092 -C -K: \
                          -f '\nKey (%K bytes): %k\t\nValue (%S bytes): %s\n\Partition: %p\tOffset: %o\n--\n' \
                          -t minio-events-v1"
    depends_on:
      - kafka

  # source https://github.com/confluentinc/examples/blob/5.3.1-post/microservices-orders/docker-compose.yml#L183-L215
  kafka-setup:
    image: confluentinc/cp-kafka:5.3.1
    hostname: kafka-setup
    container_name: kafka-setup
    restart: on-failure
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                         cub kafka-ready -b kafka:9092 1 40 && \
                         kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 10 --replication-factor 1 --topic minio-events-v1'"
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored

  schema-registry:
    image: confluentinc/cp-schema-registry:5.3.1
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: localhost
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
    depends_on:
      - kafka
      - zookeeper